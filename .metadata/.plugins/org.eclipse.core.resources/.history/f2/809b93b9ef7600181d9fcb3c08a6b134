package beat_it_1;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.util.ArrayList;

import javax.swing.ImageIcon;

public class Game extends Thread {

	private Image noteRouteLineImage = new ImageIcon(Main.class.getResource("../images/noteRouteLine.png")).getImage();
	private Image judgementLineImage = new ImageIcon(Main.class.getResource("../images/judgementLine.png")).getImage();
	private Image gameInfoImage = new ImageIcon(Main.class.getResource("../images/gameInfo.png")).getImage();
	private Image noteRoute1Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image noteRoute7Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image noteRoute5_1Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image noteRoute5_2Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image noteRoute9Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image noteRoute3Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	private Image flareImage;
	
	private String trackName;
	private String difficulty;
	private String trackMusic;
	private Music gameMusic;
	
	ArrayList<Note> noteList = new ArrayList<Note>();
	
	public Game(String trackName, String difficulty, String trackMusic) {
		this.trackName = trackName;
		this.difficulty = difficulty;
		this.trackMusic = trackMusic;
		this.gameMusic = new Music(this.trackMusic, false);
	}
	
	public void screenDraw(Graphics2D g, String judge) {
		g.drawImage(noteRoute1Image, 332, 0, null);
		g.drawImage(noteRoute7Image, 436, 0, null);
		g.drawImage(noteRoute5_1Image, 540, 0, null);
		g.drawImage(noteRoute5_2Image, 640, 0, null);
		g.drawImage(noteRoute9Image, 744, 0, null);
		g.drawImage(noteRoute3Image, 848, 0, null);
		g.drawImage(noteRouteLineImage, 328, 0, null);
		g.drawImage(noteRouteLineImage, 432, 0, null);
		g.drawImage(noteRouteLineImage, 536, 0, null);
		g.drawImage(noteRouteLineImage, 740, 0, null);
		g.drawImage(noteRouteLineImage, 844, 0, null);
		g.drawImage(noteRouteLineImage, 948, 0, null);
		g.drawImage(gameInfoImage, 0, 660, null);
		g.drawImage(judgementLineImage, 0, 580, null);
		for(int i = 0; i < noteList.size(); i++) {
			Note note = noteList.get(i);
			if(note.getY() > 620) {
				BeatIt.judge = "Miss";
			}
			if(!note.isProceed()) {
				noteList.remove(i);
				i--;
			}
			else {
				note.screenDraw(g);
			}
		}
		g.setColor(Color.white);
		g.setRenderingHint(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont(new Font("Arial", Font.BOLD, 30));
		g.drawString(trackName, 20, 702);
		g.drawString(difficulty, 1190, 702);
		g.setFont(new Font("Arial", Font.BOLD, 26));
		g.setColor(Color.DARK_GRAY);
		g.drawString("1", 374, 609);
		g.drawString("7", 478, 609);
		g.drawString("5", Main.SCREEN_WIDTH/2 - 4, 609);
		g.drawString("9", 784, 609);
		g.drawString("3", 889, 609);
		g.setFont(new Font("Elephant", Font.BOLD, 30));
		g.drawString("000000", Main.SCREEN_WIDTH/2 - 50, 702);
		g.drawImage(flareImage, Main.SCREEN_WIDTH/2 - 106, 350, null);
		if(judge != null) {
			g.setFont(new Font("Elephant", Font.BOLD, 45));
			if(judge.equals("Miss")) {
				g.setColor(Color.RED);
			}
			else if(judge.equals("Early") || judge.equals("Late")) {
				g.setColor(Color.WHITE);
			}
			else if(judge.equals("Good")) {
				g.setColor(Color.GREEN);
			}
			else if(judge.equals("Great")) {
				g.setColor(Color.ORANGE);
			}
			else if(judge.equals("Perfect")) {
				g.setColor(Color.CYAN);
			}
			g.drawString(judge, Main.SCREEN_WIDTH/2 - 73, 420);
		}
	}
	
	public void press1() {
		judge("1");
		noteRoute1Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
	}
	public void release1() {
		noteRoute1Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	}

	public void press7() {
		judge("7");
		noteRoute7Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
	}
	public void release7() {
		noteRoute7Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	}

	public void press5() {
		judge("5");
		noteRoute5_1Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
		noteRoute5_2Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
	}
	public void release5() {
		noteRoute5_1Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
		noteRoute5_2Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	}

	public void press9() {
		judge("9");
		noteRoute9Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
	}
	public void release9() {
		noteRoute9Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	}

	public void press3() {
		judge("3");
		noteRoute3Image = new ImageIcon(Main.class.getResource("../images/noteRoutePressed.png")).getImage();
	}
	public void release3() {
		noteRoute3Image = new ImageIcon(Main.class.getResource("../images/noteRoute.png")).getImage();
	}
	
	@Override
	public void run() {
		dropNotes(this.trackName);
	}
	
	public void close() {
		gameMusic.close();
		this.interrupt();
	}
	
	public void dropNotes(String trackName) {
		int i = 0;
		Beat[] beats = null;
		
		if(trackName == "Emotional Future Bass" && difficulty.equals("easy")) {
			int startTime = 0;
			int gap = 125;
			beats = new Beat[] {
					new Beat(startTime, "1"),
					new Beat(startTime + gap, "7"),
					new Beat(startTime + gap*2, "5"),
					new Beat(startTime + gap*3, "9"),
					new Beat(startTime + gap*4, "3")
			};
		}
		else if(trackName == "Emotional Future Bass" && difficulty.equals("hard")) {
			int startTime = 0;
			int gap = 125;
			beats = new Beat[] {
					new Beat(startTime, "1"),
					new Beat(startTime + gap, "7"),
					new Beat(startTime + gap*2, "5"),
					new Beat(startTime + gap*3, "9"),
					new Beat(startTime + gap*4, "3")
			};
		}
		else if(trackName == "Future Dubstep" && difficulty.equals("easy")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "1")
			};
		}
		else if(trackName == "Future Dubstep" && difficulty.equals("hard")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "1"),
					new Beat(2000, "7"),
					new Beat(3000, "5"),
					new Beat(4000, "9"),
					new Beat(5000, "3")
			};
		}
		else if(trackName == "Raw Power" && difficulty.equals("easy")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "1")
			};
		}
		else if(trackName == "Raw Power" && difficulty.equals("hard")) {
			int startTime = 1000;
			beats = new Beat[] {
					new Beat(startTime, "1"),
					new Beat(2000, "7"),
					new Beat(3000, "5"),
					new Beat(4000, "9"),
					new Beat(5000, "3")
			};
		}
		gameMusic.start();
		while(i < beats.length && !isInterrupted()) {
			boolean dropped = false;
			if(beats[i].getTime() <= gameMusic.getTime()) {
				Note note = new Note(beats[i].getNoteName());
				note.start();
				noteList.add(note);
				i++;
				dropped = true;
			}
			if(dropped != false) {
				try {
					Thread.sleep(5);
				}
				catch(Exception e) {
					e.printStackTrace();
				}
			}
		}
	}
	
	public void judge(String input) {
		for(int i = 0; i < noteList.size(); i++) {
			Note note = noteList.get(i);
			if(input.equals(note.getNoteType())) {
				if(!note.judge().equals("None")) {
					flareImage = new ImageIcon(Main.class.getResource("../images/flare.png")).getImage();
					BeatIt.judge = note.judge();
				}
				break;
			}
		}
	}
	
}
